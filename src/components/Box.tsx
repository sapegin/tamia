/* eslint-disable @typescript-eslint/no-unused-vars */

import { ReactNode } from 'react';
import styled, { DefaultTheme } from 'styled-components';
import { getCss, RestrictedProps, CSSProps } from '../primitives';

export type BoxProps = RestrictedProps<DefaultTheme> & {
	children: ReactNode;
	css?: CSSProps<DefaultTheme>;
};

/**
 * Generic container with responsive props to control whitespace, layout,
 * positioning and colors.
 */
export const Box = styled.div<BoxProps>(
	({
		theme,
		css,
		m,
		mx,
		my,
		margin,
		marginBottom,
		marginLeft,
		marginRight,
		marginTop,
		marginX,
		marginY,
		p,
		px,
		py,
		padding,
		paddingBottom,
		paddingLeft,
		paddingRight,
		paddingTop,
		paddingX,
		paddingY,
		display,
		overflow,
		overflowX,
		overflowY,
		width,
		maxWidth,
		minWidth,
		height,
		maxHeight,
		minHeight,
		size,
		verticalAlign,
		alignItems,
		alignContent,
		alignSelf,
		justifyItems,
		justifyContent,
		justifySelf,
		flexWrap,
		flexDirection,
		order,
		flexGrow,
		flexShrink,
		flexBasis,
		flex,
		gap,
		rowGap,
		columnGap,
		gridColumn,
		gridRow,
		gridAutoFlow,
		gridTemplateAreas,
		gridArea,
		gridGap,
		gridColumnGap,
		gridRowGap,
		gridAutoColumns,
		gridAutoRows,
		gridTemplateColumns,
		gridTemplateRows,
		zIndex,
		position,
		top,
		right,
		bottom,
		left,
		boxSizing,
	}) => {
		return getCss(
			{
				m,
				mx,
				my,
				margin,
				marginBottom,
				marginLeft,
				marginRight,
				marginTop,
				marginX,
				marginY,
				p,
				px,
				py,
				padding,
				paddingBottom,
				paddingLeft,
				paddingRight,
				paddingTop,
				paddingX,
				paddingY,
				display,
				overflow,
				overflowX,
				overflowY,
				width,
				maxWidth,
				minWidth,
				height,
				maxHeight,
				minHeight,
				size,
				verticalAlign,
				alignItems,
				alignContent,
				alignSelf,
				justifyItems,
				justifyContent,
				justifySelf,
				flexWrap,
				flexDirection,
				order,
				flexGrow,
				flexShrink,
				flexBasis,
				flex,
				gap,
				rowGap,
				columnGap,
				gridColumn,
				gridRow,
				gridAutoFlow,
				gridTemplateAreas,
				gridArea,
				gridGap,
				gridColumnGap,
				gridRowGap,
				gridAutoColumns,
				gridAutoRows,
				gridTemplateColumns,
				gridTemplateRows,
				zIndex,
				position,
				top,
				right,
				bottom,
				left,
				boxSizing,
				...css,
			},
			theme
		);
	}
);

Box.defaultProps = {
	boxSizing: 'border-box',
	minWidth: 0,
};

export default Box;
